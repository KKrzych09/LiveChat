{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Log in\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => _ctx.handleSubmit && _ctx.handleSubmit(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    required: \"\",\n    placeholder: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.email = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    required: \"\",\n    placeholder: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.password = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.password]]), _hoisted_1], 32\n  /* HYDRATE_EVENTS */\n  );\n}","map":{"version":3,"mappings":";;gCAIIA,oBAAuB,QAAvB,EAAuB,IAAvB,EAAQ,QAAR,EAAc;AAAA;AAAd;;;uBAHFC,oBAIO,MAJP,EAIO;IAJAC,QAAM,wDAAUC,+CAAV,EAAsB,WAAtB;EAIN,CAJP,mBACEH,oBAAiE,OAAjE,EAAiE;IAA1DI,IAAI,EAAC,OAAqD;IAA7CC,QAAQ,EAAR,EAA6C;IAApCC,WAAW,EAAC,OAAwB;+DAAPH,aAAKI;EAAE,CAAjE;;EAAA,kBAA0DJ,+BAC1DH,oBAA0E,OAA1E,EAA0E;IAAnEI,IAAI,EAAC,UAA8D;IAAnDC,QAAQ,EAAR,EAAmD;IAA1CC,WAAW,EAAC,UAA8B;+DAAVH,gBAAQI;EAAE,CAA1E;;EAAA,kBAAgEJ,kBAChEK,WAHF;;EAAA","names":["_createElementVNode","_createElementBlock","onSubmit","_ctx","type","required","placeholder","$event","_hoisted_1"],"sourceRoot":"","sources":["/Users/kamil/Desktop/Programowanie/JavaScript/Vue/live-chat/src/components/LoginForm.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"handleSubmit\">\n    <input type=\"email\" required placeholder=\"email\" v-model=\"email\">\n    <input type=\"password\" required placeholder=\"password\" v-model=\"password\">\n    <button>Log in</button>\n  </form>\n</template>\n\n<script>\nimport { ref } from '@vue/reactivity'\nimport useLogin from '../composables/useLogin'\n\nexport default {\n    setup() {\n        // refs\n        const email = ref('')\n        const password = ref('')\n\n        const { error, login } = useLogin()\n\n        const handleSubmit = () => {\n            await login(email, password.value)\n        }\n\n        return { email, password, handleSubmit }\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}