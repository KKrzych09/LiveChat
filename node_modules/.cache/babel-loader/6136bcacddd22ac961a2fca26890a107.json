{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n\n  return $setup.user ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Navbar)])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;;;;;SAAkBC,6BAA7BC,oBAEM,KAFN,cAEM,CADJC,aAAUC,iBAAV,CACI,CAFN","names":["class","$setup","_createElementBlock","_createVNode","_component_Navbar"],"sourceRoot":"","sources":["/Users/kamil/Desktop/Programowanie/JavaScript/Vue/live-chat/src/views/ChatroomView.vue"],"sourcesContent":["<template>\n  <div class=\"container\" v-if=\"user\">\n    <Navbar />\n  </div>\n</template>\n\n<script>\nimport Navbar from '../components/Navbar.vue'\nimport getUser from '../composables/getUser'\n\nexport default {\n    components: { Navbar },\n    setup(props, context) {\n      const { user } = getUser()\n\n      const handleLogout = () => {\n\n      }\n\n      return { user, handleLogout }\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}