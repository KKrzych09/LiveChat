{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { ref } from 'vue';\nimport { projectAuth } from '../firebase/config'; // refs & signup outside of exported function\n// they don't need to be re-created every time we invoke useSignup\n\nconst error = ref(null); // This is the function that i'm going to use to sign people up and it doesn't need to be declared \n//inside useSignup function\n// when i call this function, i pass each of these values i declared in SignupForm\n\nconst signup = async (email, password, displayName) => {\n  error.value = null;\n\n  try {\n    const res = await projectAuth.createUserWithEmailAndPassword(email, password);\n\n    if (!res) {\n      throw new Error('Could not complete signup');\n    }\n\n    await res.user.updateProfile({\n      displayName\n    });\n    error.value = null;\n    return res;\n  } catch (err) {\n    console.log(err.message);\n    error.value = err.message;\n  }\n}; // The only job of this function is to return the values. The reason for that is \n\n\nconst useSignup = () => {\n  return {\n    error,\n    signup\n  };\n};\n\nexport default useSignup;","map":{"version":3,"names":["ref","projectAuth","error","signup","email","password","displayName","value","res","createUserWithEmailAndPassword","Error","user","updateProfile","err","console","log","message","useSignup"],"sources":["/Users/kamil/Desktop/Programowanie/JavaScript/Vue/live-chat/src/composables/useSignup.js"],"sourcesContent":["import { ref } from 'vue';\nimport { projectAuth } from '../firebase/config';\n\n// refs & signup outside of exported function\n// they don't need to be re-created every time we invoke useSignup\nconst error = ref(null);\n\n// This is the function that i'm going to use to sign people up and it doesn't need to be declared \n//inside useSignup function\n                    // when i call this function, i pass each of these values i declared in SignupForm\nconst signup = async (email, password, displayName) => {\n  error.value = null\n\n  try {\n    const res = await projectAuth.createUserWithEmailAndPassword(email, password)\n    if (!res) {\n      throw new Error('Could not complete signup')\n    }\n    await res.user.updateProfile({ displayName })\n    error.value = null;\n    \n    return res\n  }\n  catch(err) {\n    console.log(err.message)\n    error.value = err.message;\n  }\n}\n\n// The only job of this function is to return the values. The reason for that is \nconst useSignup = () => {\n  return { error, signup }\n}\n\nexport default useSignup"],"mappings":";AAAA,SAASA,GAAT,QAAoB,KAApB;AACA,SAASC,WAAT,QAA4B,oBAA5B,C,CAEA;AACA;;AACA,MAAMC,KAAK,GAAGF,GAAG,CAAC,IAAD,CAAjB,C,CAEA;AACA;AACoB;;AACpB,MAAMG,MAAM,GAAG,OAAOC,KAAP,EAAcC,QAAd,EAAwBC,WAAxB,KAAwC;EACrDJ,KAAK,CAACK,KAAN,GAAc,IAAd;;EAEA,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMP,WAAW,CAACQ,8BAAZ,CAA2CL,KAA3C,EAAkDC,QAAlD,CAAlB;;IACA,IAAI,CAACG,GAAL,EAAU;MACR,MAAM,IAAIE,KAAJ,CAAU,2BAAV,CAAN;IACD;;IACD,MAAMF,GAAG,CAACG,IAAJ,CAASC,aAAT,CAAuB;MAAEN;IAAF,CAAvB,CAAN;IACAJ,KAAK,CAACK,KAAN,GAAc,IAAd;IAEA,OAAOC,GAAP;EACD,CATD,CAUA,OAAMK,GAAN,EAAW;IACTC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;IACAd,KAAK,CAACK,KAAN,GAAcM,GAAG,CAACG,OAAlB;EACD;AACF,CAjBD,C,CAmBA;;;AACA,MAAMC,SAAS,GAAG,MAAM;EACtB,OAAO;IAAEf,KAAF;IAASC;EAAT,CAAP;AACD,CAFD;;AAIA,eAAec,SAAf"},"metadata":{},"sourceType":"module"}