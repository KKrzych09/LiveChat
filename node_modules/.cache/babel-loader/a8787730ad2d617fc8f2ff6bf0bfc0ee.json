{"ast":null,"code":"import { vModelText as _vModelText, withModifiers as _withModifiers, withKeys as _withKeys, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2d7a1408\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", null, [_withDirectives(_createElementVNode(\"textarea\", {\n    placeholder: \"Type a message and hit enter to send...\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.message = $event),\n    onKeypress: _cache[1] || (_cache[1] = _withKeys(_withModifiers((...args) => $setup.handleSubmit && $setup.handleSubmit(...args), [\"prevent\"]), [\"enter\"]))\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, $setup.message]]), _createElementVNode(\"div\", _hoisted_1, _toDisplayString($setup.error), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;;;;EAOSA,KAAK,EAAC;;;uBANbC,oBAOO,MAPP,EAOO,IAPP,EAOO,iBANLC,oBAIY,UAJZ,EAIY;IAHRC,WAAW,EAAC,yCAGJ;+DAFCC,iBAAOC,OAER;IADPC,UAAQ,kEAAgBF,mDAAhB,EAA4B,WAA5B,GAA4B,SAA5B;EACD,CAJZ;;EAAA,kBAEaA,iBAIR,EADLF,oBAAqC,KAArC,cAAqCK,iBAAdH,YAAc,CAArC,EAA4B;EAAA;EAA5B,CACK,CAPP","names":["class","_createElementBlock","_createElementVNode","placeholder","$setup","$event","onKeypress","_toDisplayString"],"sourceRoot":"","sources":["/Users/kamil/Desktop/Programowanie/JavaScript/Vue/live-chat/src/components/NewChatForm.vue"],"sourcesContent":["<template>\n  <form>\n    <textarea\n        placeholder=\"Type a message and hit enter to send...\"\n        v-model=\"message\"\n        @keypress.enter.prevent=\"handleSubmit\"\n    ></textarea>\n    <div class=\"error\" >{{ error }}</div>\n  </form>\n</template>\n\n<script>\nimport { ref } from '@vue/reactivity'\nimport getUser from '@/composables/getUser'\nimport useCollection from '@/composables/useCollection'\nimport { timestamp } from '@/firebase/config'\n\nexport default {\n    setup() {\n        const { user } = getUser()\n        const { addDoc, error } = useCollection('messages')\n\n        const message = ref('')\n\n        const handleSubmit = async () => {\n            const chat = {\n                name: user.value.displayName,\n                message: message.value,\n                createdAt: timestamp()\n            }\n            await addDoc(chat)\n            if (!error.value) {\n                message.value = ''\n            }\n        }\n\n        return { message, handleSubmit, error }\n    }\n}\n</script>\n\n<style scoped>\n    form {\n        margin: 10px;\n    }\n    textarea {\n        width: 100%;\n        max-width: 100%;\n        margin-bottom: 6px;\n        padding: 10px;\n        box-sizing: border-box;\n        border: 0;\n        border-radius: 20px;\n        font-family: inherit;\n        outline: none;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}