{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"error\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Sign up\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $setup.handleSubmit && $setup.handleSubmit(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    required: \"\",\n    placeholder: \"display name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.displayName = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.displayName]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    required: \"\",\n    placeholder: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.email = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    required: \"\",\n    placeholder: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.password = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.password]]), _createElementVNode(\"div\", _hoisted_1, _toDisplayString($setup.error), 1\n  /* TEXT */\n  ), _hoisted_2], 32\n  /* HYDRATE_EVENTS */\n  );\n}","map":{"version":3,"mappings":";;EAKSA,KAAK,EAAC;;;gCACXC,oBAAwB,QAAxB,EAAwB,IAAxB,EAAQ,SAAR,EAAe;AAAA;AAAf;;;uBALFC,oBAMO,MANP,EAMO;IANAC,QAAM,wDAAUC,mDAAV,EAAsB,WAAtB;EAMN,CANP,mBACEH,oBAA6E,OAA7E,EAA6E;IAAtEI,IAAI,EAAC,MAAiE;IAA1DC,QAAQ,EAAR,EAA0D;IAAjDC,WAAW,EAAC,cAAqC;+DAAbH,qBAAWI;EAAE,CAA7E;;EAAA,kBAAgEJ,uCAChEH,oBAAiE,OAAjE,EAAiE;IAA1DI,IAAI,EAAC,OAAqD;IAA7CC,QAAQ,EAAR,EAA6C;IAApCC,WAAW,EAAC,OAAwB;+DAAPH,eAAKI;EAAE,CAAjE;;EAAA,kBAA0DJ,iCAC1DH,oBAA0E,OAA1E,EAA0E;IAAnEI,IAAI,EAAC,UAA8D;IAAnDC,QAAQ,EAAR,EAAmD;IAA1CC,WAAW,EAAC,UAA8B;+DAAVH,kBAAQI;EAAE,CAA1E;;EAAA,kBAAgEJ,oBAChEH,oBAAoC,KAApC,cAAoCQ,iBAAdL,YAAc,CAApC,EAA2B;EAAA;EAA3B,GACAM,WALF;;EAAA","names":["class","_createElementVNode","_createElementBlock","onSubmit","$setup","type","required","placeholder","$event","_toDisplayString","_hoisted_2"],"sourceRoot":"","sources":["/Users/kamil/Desktop/Programowanie/JavaScript/Vue/live-chat/src/components/SignupForm.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"handleSubmit\">\n    <input type=\"text\" required placeholder=\"display name\" v-model=\"displayName\">\n    <input type=\"email\" required placeholder=\"email\" v-model=\"email\">\n    <input type=\"password\" required placeholder=\"password\" v-model=\"password\">\n    <div class=\"error\">{{ error }}</div>\n    <button>Sign up</button>\n  </form>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport useSignup from '../composables/useSignup'\n\nexport default {\n  setup() {\n    // refs\n    const displayName = ref('')\n    const email = ref('')\n    const password = ref('')\n\n    // useSignup\n    const { error, signup } = useSignup()\n\n    const handleSubmit = async () => {\n      await signup(email.value, password.value, displayName.value)\n      if (!error.value) {\n        context.emit()\n      }\n    }\n\n    return { displayName, email, password, handleSubmit, error }\n  }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}